{"version":3,"sources":["webpack:///./src/components/Teaser.js","webpack:///./src/components/medium-components/mediumSinglePost.js","webpack:///./src/components/medium-components/mediumPosts.js","webpack:///./src/components/medium-components/mediumPostList.js","webpack:///./src/components/atoms/Blockquote.js","webpack:///./src/components/atoms/SectionTitle.js","webpack:///./src/pages/index.js"],"names":["components_Teaser","_ref","teaserDate","teaserTitle","teaserLink","react_default","a","createElement","className","href","MediumSinglePost","single","mediumLink","uniqueSlug","mediumDate","createdAt","mediumTitle","title","medium_components_mediumPosts","data","lodash_default","map","last","index","key","node","mediumPostList","posts","article","atoms_Blockquote","content","quote_class","quote","quote_source","console","log","quoteClass","atoms_SectionTitle","__webpack_require__","t","default","allMediumPost","markdownRemark","group","html","frontmatter","mediumCaPosts","first","edges","mediumPosts","post","Layout","dangerouslySetInnerHTML","__html","mediumQuery"],"mappings":"yJAaAA,EAXe,SAAAC,GAA2C,IAAzCC,EAAyCD,EAAzCC,WAAYC,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,WAExC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBAAjB,IAAmCN,EAAnC,KACAG,EAAAC,EAAAC,cAAA,MAAIC,UAAa,iBAAjB,IAAoCL,EAApC,KACAE,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBAAjB,IAAiCH,EAAAC,EAAAC,cAAA,KAAGE,KAASL,GAAZ,aAAjC,OCJS,SAASM,EAATT,GAAoC,IAATU,EAASV,EAATU,OAEpCC,qCAAgDD,EAAOE,WACvDC,EAAaH,EAAOI,UACpBC,EAAcL,EAAOM,MAEzB,OACIZ,EAAAC,EAAAC,cAACP,GACCE,WAAeY,EACfX,YAAgBa,EAChBZ,WAAeQ,ICTvB,IAeAM,EAfoB,SAAAjB,GAAY,IAAVkB,EAAUlB,EAAVkB,KAEpB,OACEC,EAAAd,EAAEe,IAAIF,EAAM,SAACR,GACZ,OAAOS,EAAAd,EAAEe,IAAIV,EAAQ,SAACW,EAAMC,GACzB,OACElB,EAAAC,EAAAC,cAAA,MAAKiB,IAAQD,EAAQf,UAAY,qCAC/BH,EAAAC,EAAAC,cAACG,GAAiBc,IAAQD,EAAQZ,OAAUW,EAAKG,aCQ7DC,EAfuB,SAAAzB,GAAe,IAAZ0B,EAAY1B,EAAZ0B,MAGxB,OACEP,EAAAd,EAAEe,IAAIM,EAAO,SAACC,EAASL,GACrB,OACElB,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mCACdH,EAAAC,EAAAC,cAACW,GAAYM,KAASD,SAASJ,MAAUS,iBCOnDC,UAjBmB,SAAA5B,GAA4B,IAA1B6B,EAA0B7B,EAA1B6B,QAASC,EAAiB9B,EAAjB8B,YACtBC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,aACbC,QAAQC,IAAIH,GAEZ,IAAII,yBAAoCL,EAExC,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAc4B,GACjB/B,EAAAC,EAAAC,cAAA,kBACEF,EAAAC,EAAAC,cAAA,SAAKyB,GACL3B,EAAAC,EAAAC,cAAA,gBAAS0B,EAAT,SCHRI,EAPqB,SAAApC,GAAa,IAAXgB,EAAWhB,EAAXgB,MAErB,OACEZ,EAAAC,EAAAC,cAAA,MAAIC,UAAY,kBAAmBS,8CCUvCqB,EAAQ,KACRA,EAAQ,KAAAC,EAAAC,QAEU,SAAAvC,GAAY,IAAVkB,EAAUlB,EAAVkB,KAEVsB,EAAkCtB,EAAlCsB,cAAeC,EAAmBvB,EAAnBuB,eACfC,EAAUF,EAAVE,MACAC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YAEVC,EAAgB1B,EAAAd,EAAEyC,MAAMJ,EAAO,SAACK,GACjC,OAAOA,IAGNC,EAAc7B,EAAAd,EAAEe,IAAIyB,EAAe,SAACI,EAAM3B,GAC5C,OAAOlB,EAAAC,EAAAC,cAACmB,GAAeF,KAASD,SAASI,OAAWuB,YAGtD,OACE7C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,KAKED,EAAAC,EAAAC,cAAA,WAASC,UAAY,kCACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,sBAAsB4C,yBAA6BC,OAAQT,KAC3EvC,EAAAC,EAAAC,cAACsB,GAAWC,QAAWe,EAAad,YAAc,2BAIpD1B,EAAAC,EAAAC,cAAA,WAASC,UAAY,0CACnBH,EAAAC,EAAAC,cAAC8B,GAAapB,MAAQ,8BACpBgC,KA5BV,IAsCaK","file":"component---src-pages-index-js-1e8703366783a2ae4f69.js","sourcesContent":["import React from \"react\";\n\nconst Teaser = ({teaserDate, teaserTitle, teaserLink}) => {\n\n  return (\n    <div className = \"teaser\">\n      <div className = \"teaser__date\"> { teaserDate } </div>\n      <h3 className =  \"teaser__title\"> { teaserTitle } </h3>\n      <div className = \"teaser__link\"> <a href = { teaserLink }>Read More</a> </div>\n    </div>\n  );\n};\n\nexport default Teaser;","import React from 'react';\nimport Teaser from '../Teaser';\n\n//This displays a single medium teaser\nexport default function MediumSinglePost({single}) {\n\n  let mediumLink = `https://medium.com/civicactions/${single.uniqueSlug}`;\n  let mediumDate = single.createdAt;\n  let mediumTitle = single.title;\n\n  return (\n      <Teaser\n        teaserDate = { mediumDate }\n        teaserTitle = { mediumTitle }\n        teaserLink = { mediumLink }\n      />\n  );\n\n}","import React from 'react';\nimport _ from 'lodash'\n\nimport MediumSinglePost from './mediumSinglePost';\n\nconst MediumPosts = ({data}) => {\n// Iterate over the second & third levels of Medium posts.\n  return(\n    _.map(data, (single) => {\n     return _.map(single, (last, index) => {\n        return (\n          <li  key = { index } className = \"medium--teaser__item teaser__item\">\n            <MediumSinglePost key = { index } single = {last.node} />\n          </li>\n        );\n      })\n    })\n  )\n};\n\nexport default MediumPosts;\n\n","import React from 'react';\nimport _ from 'lodash'\n\nimport MediumPosts from './mediumPosts';\n\nconst MediumPostList = ({ posts }) => {\n\n  // Iterate through the first level of the medium posts objects;\n  return (\n    _.map(posts, (article, index) => {\n      return (\n        <ul className = \"medium--teasers teaser--wrapper\">\n          <MediumPosts key = {{ index }} data = {{ article }} />\n        </ul>\n      )\n    })\n  )\n\n};\n\nexport default MediumPostList;","import React from 'react'\n\nconst Blockquote = ({content, quote_class}) => {\n  const{quote, quote_source} = content;\n  console.log(quote);\n\n  let quoteClass = `blockquote__wrapper ${quote_class}`;\n\n  return (\n    <div className = { quoteClass }>\n      <blockquote>\n        <p>{ quote }</p>\n        <cite> { quote_source } </cite>\n      </blockquote>\n\n    </div>\n  )\n}\n\nexport default Blockquote;","import React from \"react\";\n\nconst SectionTitle = ({title}) => {\n\n  return (\n    <h2 className = \"section__title\">{ title }</h2>\n  )\n};\n\nexport default SectionTitle;","import React from 'react'\nimport _ from 'lodash'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\n\n//Components\nimport Layout from '../components/Layout'\nimport MediumPostList from '../components/medium-components/mediumPostList';\n\n// Atoms\nimport Button from '../components/atoms/Buttons'\nimport Blockquote from '../components/atoms/Blockquote'\nimport SectionTitle from '../components/atoms/SectionTitle'\n\n// Host Google Fonts locally\nrequire('typeface-ubuntu');\nrequire('typeface-lato');\n\nconst IndexPage = ({data}) => {\n\n  const { allMediumPost, markdownRemark } = data;\n  const { group } = allMediumPost;\n  const { html, frontmatter } = markdownRemark;\n\n  let mediumCaPosts = _.first(group, (edges) => {\n     return edges;\n  });\n\n  let mediumPosts = _.map(mediumCaPosts, (post, index) => {\n    return <MediumPostList key = {{ index }} posts = {{ post }} />\n  });\n\n  return (\n    <Layout>\n\n      { /* The Home page content and blockquote section.\n           The content in this section is pulled from '/content/home.md' */\n      }\n      <section className = \"home__content usa-grid section\">\n        <h3 className = \"home__content--text\" dangerouslySetInnerHTML = {{ __html: html}} />\n        <Blockquote content = {frontmatter} quote_class = \"home__content--quote \" />\n      </section>\n\n      {/* The Recent Posts from Medium Section.*/}\n      <section className = \"section section__recent-posts usa-grid\">\n        <SectionTitle title = \"See what we've been up to\" />\n        { mediumPosts }\n      </section>\n\n    </Layout>\n  );\n\n}\n\nexport default IndexPage\n\nexport const mediumQuery = graphql `\n    query mediumPosts($path: String!) {\n    allMediumPost(limit: 3) {\n      group(field: homeCollectionId ) {\n        edges {\n          node {\n            id\n            title\n            createdAt\n            uniqueSlug\n          }\n        }\n      }\n    }\n\n     markdownRemark(frontmatter: { path: { eq: $path } } ) {\n      html\n      frontmatter {\n        path\n        title\n        subtitle\n        cta_text\n        cta_link\n        quote\n        quote_source\n        banner_image {\n          childImageSharp {\n            resize(width: 980) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}